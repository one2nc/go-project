name: Go Project CI

on:
  push:
    branches:
      - main

permissions: 
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Go environment
    - name: Set up Go 1.23
      uses: actions/setup-go@v3
      with:
        go-version: '1.23'

    # Step 3: Cache Go modules for faster builds
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: /tmp/mod-cache
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-

    # Step 4: Install Go dependencies
    - name: Install dependencies
      run: |
        make install

    # Step 5: Check Go version
    - name: Check Go version
      run: |
        make version

    # Step 6: Install golangci-lint
    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin

    # Step 7: Run Linting
    - name: Run Linting
      run: |
        make lint

    # Step 8: Run Tests
    - name: Run Tests
      run: |
        make test

    # Step 9: Build the Go project
    - name: Build the Go project
      run: |
        make build

    # Step 10: Build and tag Docker image
    - name: Build Docker image
      run: |
        make docker-build

    # Step 11: Log in to Docker Hub
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 12: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        make docker-push

#    # Step 12: Run Docker container locally (Optional)
#    - name: Run Docker container locally
#      run: |
#        make docker-run
